<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>峰峰的博客</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on 峰峰的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 04 Oct 2019 10:51:31 +0800</lastBuildDate>
    
        <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>http://localhost:1313/about/</guid>
      
        <description>&lt;p&gt;Hugo is a static site engine written in Go.&lt;/p&gt;

&lt;p&gt;It makes use of a variety of open source projects including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cobra&#34;&gt;Cobra&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/viper&#34;&gt;Viper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/jWalterWeatherman&#34;&gt;J Walter Weatherman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/spf13/cast&#34;&gt;Cast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Learn more and contribute on &lt;a href=&#34;https://github.com/gohugoio&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>JavaScript 函数的执行时机</title>
      <link>http://localhost:1313/post/js%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</link>
      <pubDate>Fri, 04 Oct 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js%E5%87%BD%E6%95%B0%E7%9A%84%E6%89%A7%E8%A1%8C%E6%97%B6%E6%9C%BA/</guid>
      
        <description>

&lt;h2 id=&#34;js-函数的执行时机&#34;&gt;JS 函数的执行时机&lt;/h2&gt;

&lt;h4 id=&#34;现在有如下代码-请问会打印出什么&#34;&gt;现在有如下代码，请问会打印出什么？&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;let i = 0
for(i = 0; i&amp;lt;6; i++){
  setTimeout(()=&amp;gt;{
    console.log(i)
  },0)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;答案：6个6&lt;/p&gt;

&lt;p&gt;这个就要从函数的执行时机说起，首先是setTimeout，过一段时间执行，尽快执行，先把当前所有代码执行&lt;/p&gt;

&lt;p&gt;完，才做等一会做的事情&lt;/p&gt;

&lt;p&gt;所以，会先把整个循环执行完，在进行打印i。先执行整个循环，最后i=6，i跳出for循环，然后打印出i，要&lt;/p&gt;

&lt;p&gt;打印6次，所以是6个6，要把手头上的事处理完，然后就打印出i&lt;/p&gt;

&lt;h4 id=&#34;有什么办法可以打印出-0-1-2-3-4-5&#34;&gt;有什么办法可以打印出 0、1、2、3、4、5&lt;/h4&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for（let i=0; i&amp;lt;6; i++）{
 setTimeout(()=&amp;gt;{
    console.log(i)
  },0)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;因为JS在for和let一起用时会加东西，每次循环时会多创建一个i，打印时，就会把0、1、2、3、4、5依次放&lt;/p&gt;

&lt;p&gt;入i中打印出来，而不是打印6个6&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>JS 对象基本用法</title>
      <link>http://localhost:1313/post/js-%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Wed, 18 Sep 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js-%E5%AF%B9%E8%B1%A1%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      
        <description>

&lt;h1 id=&#34;js-对象基本用法&#34;&gt;JS 对象基本用法&lt;/h1&gt;

&lt;h3 id=&#34;声明对象的两种语法&#34;&gt;声明对象的两种语法&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;let obj = { &#39;name&#39; : &#39;frank&amp;quot; , &#39;age&#39; : &#39;18&#39;}        简单写法

let obj = new Object({&#39;name&#39; : &#39;frank&#39;})        正规写法，有点麻烦
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;如何删除对象的属性&#34;&gt;如何删除对象的属性&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;delete obj.xxx  或   delete obj[&#39;xxx&#39;]

obj.xxx === undefined
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要区分 属性值为undefined 和  不含属性名&lt;/p&gt;

&lt;p&gt;delete 删除的是整条属性，包括属性名和属性值&lt;/p&gt;

&lt;p&gt;undefined，是把属性值变成空，属性名还存在&lt;/p&gt;

&lt;h3 id=&#34;如何查看对象的属性&#34;&gt;如何查看对象的属性&lt;/h3&gt;

&lt;p&gt;查看所有属性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;object.keys(obj)  查看属性名

object.values(obj) 查看属性值

object.entries(obj) 查看全部
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;查看自身和共有属性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;console.dir(obj) 以目录的形式查看
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者依次用&lt;/p&gt;

&lt;p&gt;object.keys(obj)  和 (obj._ &lt;em&gt;proto&lt;/em&gt; _) 不推荐使用&lt;/p&gt;

&lt;p&gt;判断一个属性是自身还是共有的&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;obj.hasOwnProperty(toString) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;两种方法查看单个属性&lt;/p&gt;

&lt;p&gt;中括号语法：obj[&amp;lsquo;key&amp;rsquo;]   键名&lt;/p&gt;

&lt;p&gt;点语法：    obj.key      key也是字符串，只不过省略了 &amp;lsquo; &amp;rsquo; 引号&lt;/p&gt;

&lt;p&gt;坑新人语法：obj[key]     这里面的key是变量，变量key的值一般不为&amp;rsquo;key&amp;rsquo;&lt;/p&gt;

&lt;p&gt;优先使用中括号语法，点语法误导你，认为key不是字符串&lt;/p&gt;

&lt;h3 id=&#34;如何修改或增加对象的属性&#34;&gt;如何修改或增加对象的属性&lt;/h3&gt;

&lt;p&gt;修改和增加差不多，如果属性有了就修改，没有就增加&lt;/p&gt;

&lt;p&gt;直接赋值&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;let obj = { name : &#39;frank&#39; }      name是字符串

obj.name =&#39;frank&#39;                 name是字符串

obj[&#39;name&#39;] = &#39;frank&#39;             name是字符串

obj[&#39;na&#39;+&#39;me&#39;] = &#39;frank&#39;          运算的方法

let key = &#39;name&#39;; obj[key]=&#39;frank&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;错误写法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;obj[name] = &#39;frank&#39;              错误写法，name是变量，值不确定

let key = &#39;name&#39;; obj.key=&#39;frank&#39;  错误，因为obj.key等价于obj[&#39;key&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;批量赋值&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;object.assign(obj,{age:18,gender:&#39;man&#39;})
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;name-in-obj和obj-hasownproperty-name-的区别&#34;&gt;&amp;lsquo;name&amp;rsquo; in obj和obj.hasOwnProperty(&amp;lsquo;name&amp;rsquo;) 的区别&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;&#39;name&#39; in object   in只能查看属性，不知道是自身还是共有的 

obj.hasOwnProperty(toString) 判断一个属性是自身还是共有的
&lt;/code&gt;&lt;/pre&gt;
</description>
      
    </item>
    
    <item>
      <title>JS语法总结</title>
      <link>http://localhost:1313/post/js%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 14 Sep 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/js%E8%AF%AD%E6%B3%95%E6%80%BB%E7%BB%93/</guid>
      
        <description>

&lt;h1 id=&#34;js的基本语法&#34;&gt;JS的基本语法&lt;/h1&gt;

&lt;h3 id=&#34;js的表达式和语句&#34;&gt;JS的表达式和语句&lt;/h3&gt;

&lt;p&gt;表达式是输出值的，并且可以写在任何需要一个值的地方。例如函数调用里面的实参&lt;/p&gt;

&lt;p&gt;笼统来说，一个语句表示执行了一个动作。循环控制语句和if语句就是例子&lt;/p&gt;

&lt;p&gt;表达式一般都有值，语句可能有，可能没有&lt;/p&gt;

&lt;p&gt;语句一般会改变环境（声明，赋值）&lt;/p&gt;

&lt;p&gt;这两句话，并不绝对&lt;/p&gt;

&lt;h3 id=&#34;标识符的规则&#34;&gt;标识符的规则&lt;/h3&gt;

&lt;p&gt;第一个字符，可以使用Unicode字母或$或_或中文&lt;/p&gt;

&lt;p&gt;后面的字符，可以使用Unicode字母或$或_或中文还有数字&lt;/p&gt;

&lt;p&gt;变量名是标识符，例如：&lt;/p&gt;

&lt;p&gt;var _ = 1&lt;/p&gt;

&lt;p&gt;var $ = 2&lt;/p&gt;

&lt;p&gt;var ______ = 6 （下划线最多使用2个，用多了容易挨揍）&lt;/p&gt;

&lt;p&gt;var 你好 = &amp;ldquo;hi&amp;rdquo;&lt;/p&gt;

&lt;h3 id=&#34;if-else语句&#34;&gt;if&amp;hellip;else语句&lt;/h3&gt;

&lt;p&gt;当指定条件为真，if 语句会执行一段语句。如果条件为假，则执行另一段语句&lt;/p&gt;

&lt;p&gt;语法：&lt;/p&gt;

&lt;p&gt;if（表达式）{&lt;/p&gt;

&lt;p&gt;语句1&lt;/p&gt;

&lt;p&gt;} else{&lt;/p&gt;

&lt;p&gt;语句2&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;{ }花括号在语句只有1句的时候可以省略，不建议省略，容易产生分歧&lt;/p&gt;

&lt;p&gt;使用if&amp;hellip;else时，要注意一些细节，变态情况&lt;/p&gt;

&lt;p&gt;表达式里可以非常变态，例：    a = 1      是错误的
a = 1，不是a等于1，一个等号是复制后面的内容给前面，不是等于号
=== 三个等号，才是等于号，绝对等于&lt;/p&gt;

&lt;p&gt;语句1里可以非常变态，例如：嵌套 if else
代码示例：if （a &amp;lt; 100）
        if（a &amp;lt; 10）&lt;/p&gt;

&lt;p&gt;语句2里可以非常变态，例如：嵌套 if else
代码示例：if （a &amp;lt; 100）{
                      语句1
                     } else if（a &amp;gt; 1000）{
                      语句1
                     } else { 语句2 }
这是2套if  else&lt;/p&gt;

&lt;p&gt;缩进也可以非常变态，面试题经常下套
a = 1
if （a === 2）       （if这句有一个无形的{ }花括号，只包含一句语句）
console.log（&amp;rdquo;a&amp;rdquo;）
console.log(&amp;ldquo;a等于2&amp;rdquo;)
结果是打印出  a等于2&lt;/p&gt;

&lt;h3 id=&#34;while语句&#34;&gt;while语句&lt;/h3&gt;

&lt;p&gt;while 语句可以在某个条件表达式为真的前提下，循环执行指定的一段代码，直到那个表达式不为真时结束循环&lt;/p&gt;

&lt;p&gt;语法：&lt;/p&gt;

&lt;p&gt;while （表达式）{语句}&lt;/p&gt;

&lt;p&gt;判断表达式的真假&lt;/p&gt;

&lt;p&gt;当表达式为真，执行语句，执行完在判断表达式的真假&lt;/p&gt;

&lt;p&gt;当表达式为假，执行后面的语句&lt;/p&gt;

&lt;h3 id=&#34;for-循环&#34;&gt;for 循环&lt;/h3&gt;

&lt;p&gt;for 语句用于创建一个循环，它包含了三个可选的表达式，三个可选的表达式包围在圆括号中并由分号分隔， 后跟一个在循环中执行的语句&lt;/p&gt;

&lt;p&gt;语法：&lt;/p&gt;

&lt;p&gt;for（语句1; 表达式2; 表达式3;）{&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;                        循环体

                        }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（语句1填初始化，表达式2填判断，表达式3填增长）&lt;/p&gt;

&lt;p&gt;先执行语句1&lt;/p&gt;

&lt;p&gt;然后判断表达式2&lt;/p&gt;

&lt;p&gt;如果为真，执行循环体，然后执行语句3&lt;/p&gt;

&lt;p&gt;如果为假，直接退出循环体，执行后面的语句&lt;/p&gt;

&lt;h3 id=&#34;break-退出所有循环-和-continue-退出当前一次循环&#34;&gt;break（退出所有循环）和 continue（退出当前一次循环）&lt;/h3&gt;

&lt;p&gt;例子：&lt;/p&gt;

&lt;p&gt;for（var i = 0; i &amp;lt; 10; i++）{&lt;/p&gt;

&lt;p&gt;if ( i % 2 === 1 ) {&lt;/p&gt;

&lt;p&gt;break } }                  break，只退出最近的循环&lt;/p&gt;

&lt;p&gt;continue                   continue，过，下一个，跳出当前循环&lt;/p&gt;

&lt;h3 id=&#34;label标记语句&#34;&gt;label标记语句&lt;/h3&gt;

&lt;p&gt;标记就是在一条语句前面加个可以引用的标识符（identifier）&lt;/p&gt;

&lt;p&gt;语法:&lt;/p&gt;

&lt;p&gt;foo（在任何情况下写一个标识符，随便起个名字的意思）&lt;/p&gt;

&lt;p&gt;foo : {&lt;/p&gt;

&lt;p&gt;console.log( 1 );&lt;/p&gt;

&lt;p&gt;break foo;&lt;/p&gt;

&lt;p&gt;console.log(&amp;ldquo;本行不会输出&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;console.log( 2 )&lt;/p&gt;

&lt;p&gt;一道面试题(在火狐浏览器里)：这个东西是什么？&lt;/p&gt;

&lt;p&gt;{&lt;/p&gt;

&lt;p&gt;foo : 1&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;答案：foo 标签，是一个label，语句是 1&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>CSS知识总结</title>
      <link>http://localhost:1313/post/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 08 Sep 2019 12:11:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/css%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</guid>
      
        <description>

&lt;h1 id=&#34;css知识总结&#34;&gt;CSS知识总结&lt;/h1&gt;

&lt;h3 id=&#34;浏览器的渲染过程&#34;&gt;浏览器的渲染过程&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;根据HTML构建HTML树（DOM）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;根据CSS构建CSS树 （CSSOM）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将两棵树合并成一颗渲染树（rendtree）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Layout布局（定位）（文档流，盒模型，计算大小和位置）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;panint绘制（把边框颜色，文字颜色，阴影等画出来）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;composiet合成（根据层叠关系展示画面）（把各层之间拍平，然后渲染到界面上）&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;css动画的两种做法&#34;&gt;CSS动画的两种做法&lt;/h3&gt;

&lt;p&gt;第一种，使用transform，transition 和 :hover&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重点是使用:hover，创建一个鼠标悬浮事件，让动画效果随着鼠标悬浮产生&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用transform（变形），4个属性：位移，translate、缩放，scale、旋转，rotate、倾斜，slcew&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用transition（过渡），添加中间帧，告诉开头，中间，结尾，怎么样&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;示例代码：&lt;a href=&#34;http://js.jirengu.com/lubag/1/edit?html,css,output&#34;&gt;http://js.jirengu.com/lubag/1/edit?html,css,output&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第二种，animatioin，@keyframes（关键帧）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;重点是使用@keyframes（关键帧），定义几个节点，定义动画在节点时的样子&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;缩写语法animation时长，过渡方式，延迟，次数，方向，填充模式，是否暂停，动画名&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;示例代码：&lt;a href=&#34;http://js.jirengu.com/yomay/1/edit?html,css,output&#34;&gt;http://js.jirengu.com/yomay/1/edit?html,css,output&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;学习css的重点&#34;&gt;学习css的重点&lt;/h3&gt;

&lt;p&gt;要有想象力！！！基本属性是固定的，如何用属性组合成不同样式才是最重要的&lt;/p&gt;

&lt;p&gt;要学会把图形分解成自己能理解的样子！ 多多练习&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>JavaScript 的诞生</title>
      <link>http://localhost:1313/post/javascript-%E7%9A%84%E8%AF%9E%E7%94%9F/</link>
      <pubDate>Wed, 04 Sep 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/javascript-%E7%9A%84%E8%AF%9E%E7%94%9F/</guid>
      
        <description>

&lt;h1 id=&#34;javascript-的诞生&#34;&gt;JavaScript 的诞生&lt;/h1&gt;

&lt;p&gt;1994年，网景公司（Netscape）发布了Navigator浏览器0.9版。这是历史上第一个比较&lt;/p&gt;

&lt;p&gt;成熟的网络浏览器，轰动一时。但是，这个版本的浏览器只能用来浏览，不具备与访问者互&lt;/p&gt;

&lt;p&gt;动的能力。网景公司急需一种网页脚本语言，使得浏览器可以与网页互动。&lt;/p&gt;

&lt;h3 id=&#34;网页脚本语言到底是什么语言&#34;&gt;网页脚本语言到底是什么语言？&lt;/h3&gt;

&lt;p&gt;网景公司当时有两个选择：一个是采用现有的语言，比如Perl、Python、Tcl、Scheme
等等，允许它们直接嵌入网页；另一个是发明一种全新的语言。&lt;/p&gt;

&lt;p&gt;1995年4月，网景公司录用了34岁的系统程序员Brendan Eich。&lt;/p&gt;

&lt;p&gt;Brendan Eich的主要方向和兴趣是函数式编程，网景公司招聘他的目的，是研究将
Scheme语言作为网页脚本语言的可能性。&lt;/p&gt;

&lt;p&gt;但是因为1995年Sun公司将Oak语言改名为Java，并大肆宣传，许诺这种语言可以&amp;rdquo;一次编
写，到处运行&amp;rdquo;，它看上去很可能成为未来的主宰。&lt;/p&gt;

&lt;p&gt;所以在一个月之后，1995年5月，网景公司做出决策，未来的网页脚本语言必须&amp;rdquo;看上去与
Java足够相似&amp;rdquo;，但是比Java简单，使得非专业的网页作者也能很快上手。这个决策实际上
将Perl、Python、Tcl、Scheme等非面向对象编程的语言都排除在外了。&lt;/p&gt;

&lt;p&gt;于是Brendan Eich被指定为这种&amp;rdquo;简化版Java语言&amp;rdquo;的设计师。&lt;/p&gt;

&lt;p&gt;但是，他对Java一点兴趣也没有。为了应付公司安排的任务，他只用10天时间就把Javascript设计出来了。&lt;/p&gt;

&lt;p&gt;由于设计时间太短，语言的一些细节考虑得不够严谨，导致后来很长一段时间，Javascript写出来的程序混乱不堪。&lt;/p&gt;

&lt;h3 id=&#34;总的来说-他的设计思路是这样的&#34;&gt;总的来说，他的设计思路是这样的：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;借鉴C语言的基本语法；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;借鉴Java语言的数据类型和内存管理；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;借鉴Scheme语言，将函数提升到&amp;rdquo;第一等公民&amp;rdquo;（first class）的地位；&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;借鉴Self语言，使用基于原型（prototype）的继承机制。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以，Javascript语言实际上是两种语言风格的混合产物&amp;mdash;-（简化的）函数式编程+（简化的）面向对象编程。&lt;/p&gt;

&lt;h3 id=&#34;那么到底什么是javascript呢&#34;&gt;那么到底什么是JavaScript呢？&lt;/h3&gt;

&lt;p&gt;JavaScript（通常缩写为JS）是一种高级的、解释型的编程语言。&lt;/p&gt;

&lt;p&gt;JavaScript是一门基于原型、函数先行的语言，是一门多范式的语言，它支持面向对象编程，命令式编程，以及函数式编程。它提供语法来操控文本、数组、日期以及正则表达式等，不支持I/O，比如网络、存储和图形等，但这些都可以由它的宿主环境提供支持。&lt;/p&gt;

&lt;p&gt;虽然JavaScript与Java这门语言不管是在名字上，或是在语法上都有很多相似性，但这两门编程语言从设计之初就有很大的不同，JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似（例如if条件语句、while循环、switch语句、do-while循环等）。&lt;/p&gt;

&lt;p&gt;在客户端，JavaScript在传统意义上被实现为一种解释语言，但在最近，它已经可以被即时编译（JIT）执行。随着最新的HTML5和CSS3语言标准的推行它还可用于游戏、桌面和移动应用程序的开发和在服务器端网络环境运行，如Node.js。&lt;/p&gt;

&lt;h3 id=&#34;一般来说-完整的javascript包括以下几个部分&#34;&gt;一般来说，完整的JavaScript包括以下几个部分：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ECMAScript，描述了该语言的语法和基本对象&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ECMAScript，描述了该语言的语法和基本对象&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;浏览器对象模型（BOM），描述与浏览器进行交互的方法和接口&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;javascript的基本特点如下&#34;&gt;JavaScript的基本特点如下：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;是一种解释性脚本语言（代码不进行预编译）。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主要用来向HTML页面添加交互行为。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以直接嵌入HTML页面，但写成单独的js文件有利于结构和行为的分离。&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;javascript常用来完成以下任务&#34;&gt;JavaScript常用来完成以下任务：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;嵌入动态文本于HTML页面&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;对浏览器事件作出响应&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;读写HTML元素&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在数据被提交到服务器之前验证数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;检测访客的浏览器信息&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;控制cookies，包括创建和修改等&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>跳动的心脏</title>
      <link>http://localhost:1313/post/%E8%B7%B3%E5%8A%A8%E7%9A%84%E5%BF%83%E8%84%8F/</link>
      <pubDate>Tue, 03 Sep 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E8%B7%B3%E5%8A%A8%E7%9A%84%E5%BF%83%E8%84%8F/</guid>
      
        <description>

&lt;h1 id=&#34;今天使用css-练习了一个跳动的心脏-加载界面&#34;&gt;今天使用css， 练习了一个跳动的心脏 加载界面&lt;/h1&gt;

&lt;p&gt;主要使用三个span元素，通过定位，让他们排列成三角形，然后定义动画，同时变大，就&lt;/p&gt;

&lt;p&gt;像跳动的心脏一样&lt;/p&gt;

&lt;p&gt;下面是遇到不懂的知识点&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;svg   可缩放矢量图形,是一种用于描述基于二维的矢量图形的，基于 XML 的标记&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;语言。本质上，SVG 相对于图像，就好比 HTML 相对于文本。&lt;/p&gt;

&lt;p&gt;SVG 图像及其相关行为被定义于 XML 文本文件之中，这意味着可以对它们进行搜索、&lt;/p&gt;

&lt;p&gt;索引、编写脚本以及压缩。此外，这也意味着可以使用任何文本编辑器和绘图软件来创建和&lt;/p&gt;

&lt;p&gt;编辑它们。（需要系统的学习一下这部分）&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;svg xmlns=&amp;ldquo;&lt;a href=&#34;http://www.w3.org/2000/svg&amp;quot;&#34;&gt;http://www.w3.org/2000/svg&amp;quot;&lt;/a&gt;  定义了这个命名空间&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;什么是命名空间？&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;也称命名空间、名称空间等，它表示着一个标识符（identifier）的可见范围。 一个标&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;识符可在多个命名空间中定义，它在不同命名空间中的含义是互不相干的。 这样，在一个&lt;/p&gt;

&lt;p&gt;新的命名空间中可定义任何标识符，它们不会与任何已有的标识符发生冲突，因为已有的&lt;/p&gt;

&lt;p&gt;定义都处于其他命名空间中。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;feGaussianBlur   该滤镜对输入图像进行高斯模糊&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;stdDeviation       中指定的数量定义了钟形&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;transform-origin： 50%；    改变元素的原点&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;@keyframes    通过在动画序列中定义关键帧的样式来 控制css动画序列的中间步骤&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;定义动画效果，例如 0%时的动画效果，40%时的动画效果&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;opacity      不透明度&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;background-color：transparent；    背景色是透明的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;letter-spacing    文字间距&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;代码链接：&lt;a href=&#34;http://js.jirengu.com/cafig/3/edit?html,css,output&#34;&gt;http://js.jirengu.com/cafig/3/edit?html,css,output&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;效果展示：&lt;a href=&#34;http://shuaigechen.site/xinzang-demo-1/&#34;&gt;http://shuaigechen.site/xinzang-demo-1/&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>下拉框</title>
      <link>http://localhost:1313/post/%E4%B8%8B%E6%8B%89%E6%A1%86/</link>
      <pubDate>Wed, 28 Aug 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E4%B8%8B%E6%8B%89%E6%A1%86/</guid>
      
        <description>

&lt;h1 id=&#34;下拉框&#34;&gt;下拉框&lt;/h1&gt;

&lt;p&gt;今天使用CSS，联系制作了下拉框，调试了很久才成功&lt;/p&gt;

&lt;p&gt;选择器的标签写错了，基础中的基础错误！！&lt;/p&gt;

&lt;p&gt;一定要细心！！！&lt;/p&gt;

&lt;p&gt;下面总结的不懂的知识，记录下来方便复习&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;html  details 元素可以创建一个挂件，仅在切换成展开状态时，它才会显示内涵信息，创建下拉框&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;summary 可以为该元素提供概要或标签（用作一个details元素的内容摘要，标题，案例）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;border：none   没有边框&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;cursor 定义鼠标指针悬浮在元素上的样子&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a.button：{filter : brightness:(75%)}&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;伪类元素     亮度75%&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;匹配被用户激活的元素，当用户进行鼠标点击交互时，让浏览器给出反馈&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;list-style-type  列表样式类型&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;:focus   表示获得焦点的元素（如表单输入）  当用户点击/触碰元素或通过tab键 选择它时被触发&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;outline  属性用来设置一个或多个单独的轮廓属性，  outline：none   没有轮廓&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;transparent   透明度&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;display 指定元素的显示类型，用指定元素怎么样生成盒模型&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是遇到的不懂的地方，一定要多看，多练习&lt;/p&gt;

&lt;p&gt;效果：&lt;a href=&#34;http://shuaigechen.site/xialakuang-demo-1/&#34;&gt;http://shuaigechen.site/xialakuang-demo-1/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;代码：&lt;a href=&#34;https://github.com/shuaigechen/xialakuang-demo-1&#34;&gt;https://github.com/shuaigechen/xialakuang-demo-1&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Loading图标</title>
      <link>http://localhost:1313/post/loading%E5%9B%BE%E6%A0%87/</link>
      <pubDate>Tue, 27 Aug 2019 16:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/loading%E5%9B%BE%E6%A0%87/</guid>
      
        <description>

&lt;h1 id=&#34;使用css制作loading载入动画&#34;&gt;使用CSS制作Loading载入动画&lt;/h1&gt;

&lt;p&gt;今天找了一个小demo，制作了loading载入动画&lt;/p&gt;

&lt;p&gt;已经学完CSS语法以及属性，使用网上的项目进行练习&lt;/p&gt;

&lt;p&gt;有一些属性已经学过，但第一次看代码时还是会忘记，还是要多练习&lt;/p&gt;

&lt;p&gt;把这个demo遇见的不懂的记录下来，方便以后回忆复习&lt;/p&gt;

&lt;h4 id=&#34;用到的css属性&#34;&gt;用到的css属性&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;background：radial-gradient 创建一个&lt;image&gt;，用来展示由原点（渐变中心）辐射开的颜色&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;渐变。这个方法得到的是一个CSS&lt;gradient&gt;数据类型的对象。意思是创建一个背景颜色是渐变色的背景&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;position: absolute; 觉得定位，基于他的最近的祖先元素进行定位&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;transform   属性允许你旋转，缩放，倾斜或平移给定元素。这是通过修改CSS视觉格式化模型的坐&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;标空间来实现的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;border-radius：50%； radius半径，这条代码让一个正方形变成圆&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;transform-origin：50%；更改一个元素变形的原点&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;animation: circle .5s alternate infinite ease;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;animation用来指定一组或多组动画&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;@keyframes规则是通过在动画序列中定义关键帧的样式来控制CSS动画序列中的步骤&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;animtion-delay：.2s   动画延迟，意思是从哪个时间开始进行动画，定义动画什么时候开始&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;left：auto； left的值是auto，对于绝对定位元素，会忽略left的值，以right为主去定位&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;如果right的值也是auto，那么元素不会偏离&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;filter：blur（1px）（模糊1px）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将模糊或颜色便宜等图形效果应用于元素上&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;opacity：7   不透明度是7&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;letter-spacing：12px  文字间距 12px&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些就是写这个demo遇见不懂的知识，一定要多练习，多做项目，加油！&lt;/p&gt;

&lt;p&gt;效果：&lt;a href=&#34;http://shuaigechen.site/Loading-demo/&#34;&gt;http://shuaigechen.site/Loading-demo/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;代码：&lt;a href=&#34;https://github.com/shuaigechen/Loading-demo&#34;&gt;https://github.com/shuaigechen/Loading-demo&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>浅析URL</title>
      <link>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</link>
      <pubDate>Tue, 27 Aug 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E6%B5%85%E6%9E%90url/</guid>
      
        <description>

&lt;h1 id=&#34;今天学习了url-把学到的知识记录下来&#34;&gt;今天学习了URL，把学到的知识记录下来&lt;/h1&gt;

&lt;h3 id=&#34;url-uniform-resource-locator-统一资源定位服务&#34;&gt;URL（Uniform Resource Locator）统一资源定位服务&lt;/h3&gt;

&lt;p&gt;一个整的URL由以下几部分组成&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;http://www.baidu.com/s?wd=css&amp;amp;crsv-spt=1#盒模型&#34;&gt;http://www.baidu.com/s?wd=css&amp;amp;crsv-spt=1#盒模型&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;协议    域名或IP      路径     查询参数     锚点&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;协议规定了2件事&#34;&gt;协议规定了2件事&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如何定位一台设备&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;如何封装数据报文，便以跟其他设备交流&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;ip分为内网和外网&#34;&gt;IP分为内网和外网&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;IP的作用是定位设备&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;路径可以请求不同的页面&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;锚点可以请求同一页面不同的位置&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;dns是域名系统-domain-name-system&#34;&gt;DNS是域名系统（Domain Name System）&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;作用是对应域名和IP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用 nslookup baidu.com  可以查询百度的IP&lt;/p&gt;

&lt;p&gt;使用 ping baidu.com    查询百度IP&lt;/p&gt;

&lt;h4 id=&#34;域名是对ip的别称&#34;&gt;域名是对IP的别称&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;com          顶级域名&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;baidu.com    二级域名，有可能二级域名和三级不是一个公司的，因为穷&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;www.baidu.com   三级域名，和二级是父子关系&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这是我对URL一个简单的总结，有新的知识会随时添加&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>海贼王网站</title>
      <link>http://localhost:1313/post/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99/</link>
      <pubDate>Wed, 21 Aug 2019 12:11:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E7%AC%AC%E4%B8%80%E4%B8%AA%E7%BD%91%E7%AB%99/</guid>
      
        <description>

&lt;h1 id=&#34;今天尝试用html写了第一个网站&#34;&gt;今天尝试用HTML写了第一个网站&lt;/h1&gt;

&lt;p&gt;网站简单介绍了海贼王，可以直接链接到视频网站，去观看海贼王&lt;/p&gt;

&lt;h3 id=&#34;网站包含了以下的元素-属性&#34;&gt;网站包含了以下的元素，属性&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;h1 1级标签&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;h2 2级标签&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;section 章节&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;p  段落&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;img 图片&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ul  无序列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ol  有序列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;table 表格&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a  超链接&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;海贼王网站链接：&lt;a href=&#34;http://shuaigechen.site/haizeiwang-demo-1/&#34;&gt;http://shuaigechen.site/haizeiwang-demo-1/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;第一次做网站，功能比较少，以后继续努力学习新的知识，加油&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>彩虹</title>
      <link>http://localhost:1313/post/%E5%BD%A9%E8%99%B9/</link>
      <pubDate>Tue, 20 Aug 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%BD%A9%E8%99%B9/</guid>
      
        <description>

&lt;h1 id=&#34;今天学了css基础-尝试做了一个彩虹&#34;&gt;今天学了css基础，尝试做了一个彩虹&lt;/h1&gt;

&lt;p&gt;主要使用了css的盒模型知识，文档流与脱离文档流，margin合并，主要使用了border-box，边框盒&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;border-box width=content(内容宽度）+padding（内边距）+border（边框）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;overflow: hidden 溢出盒模型的部分隐藏&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;代码链接：&lt;a href=&#34;http://js.jirengu.com/jifum/1/watch?html,css,output&#34;&gt;http://js.jirengu.com/jifum/1/watch?html,css,output&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML常用标签</title>
      <link>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</link>
      <pubDate>Sun, 18 Aug 2019 12:11:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE/</guid>
      
        <description>

&lt;h1 id=&#34;html常用标签&#34;&gt;HTML常用标签&lt;/h1&gt;

&lt;h2 id=&#34;a标签的用法&#34;&gt;a标签的用法&lt;/h2&gt;

&lt;p&gt;a标签有2个常用的标签属性&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;href，hyper+reference     超链接&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;target，在哪个窗口打开href的超链接&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a标签href的取值&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;网址：&lt;a href=&#34;https://baidu.com;http//baidu.com;//baidu.com;最后一种权限最高，建议使用这种输入方式&#34;&gt;https://baidu.com;http//baidu.com;//baidu.com;最后一种权限最高，建议使用这种输入方式&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;路径：/a/b/c;a/b/c;  index.html;./index.html&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;伪协议：javascript:代码;(案例：javascript:alert(1);做一个a标签，这个标签什么也不做)；    mailto:邮箱;       tel:电话;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ID:   href =#xxx   跳转到xxx&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;a标签target的取值&lt;/p&gt;

&lt;p&gt;内置名字&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;_blank    在空白（新的）界面打开&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;_top      所有iframe（界面）最顶层打开&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;_parent   副级窗口，在当前链接（界面）的上一层打开&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;_self     在自己的界面打开&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;img标签的用法&#34;&gt;img标签的用法&lt;/h2&gt;

&lt;p&gt;img(图片)标签，作用是发出get请求，展示这个图片&lt;/p&gt;

&lt;p&gt;属性&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;src       source，资料，接图片地址&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;alt       可选填&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;height    高&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;width     宽&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;默认代码格式:img src=&amp;ldquo;图片&amp;rdquo; alt =&amp;ldquo;介绍&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;事件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;onload    在加载成功时显示一个介绍，提示用&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;onerror   监听图片是否加载成功，可以做一个补救方案，xxx.src=&amp;ldquo;./404.png&amp;rdquo;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;响应式&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;max-width：100%; 让图片的宽始终是页面大小，适配手机&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;table标签的用法&#34;&gt;table标签的用法&lt;/h2&gt;

&lt;p&gt;table相关标签&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;table         表格&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;thead         表格的头部&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tbody         表格的中间部分&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tfoot         表格的尾部&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tr            table+row，table里的一行&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;th            表头&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;td            table+data，表格里的数据&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;相关样式&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;table-layout ：auto ; 默认值，自动计算行的宽，高，自动对齐&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;       ：fixed; 尽量平均宽和高
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;border-collapse ：collapse;合并表格&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;border-spacing：0;控制border之间的距离为0&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;form标签的用法&#34;&gt;form标签的用法&lt;/h2&gt;

&lt;p&gt;form（表单）标签，作用是发送get或post请求，刷新界面（提交）&lt;/p&gt;

&lt;p&gt;属性&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;action         控制请求哪个界面，里面写什么就访问什么地址&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;autocomplete   是否自动填充，多用于登陆时保存登陆信息&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;method         选择用get或post请求&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;target         把哪个页面变成yyy页面&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;事件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;onsubmit&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;一个表单必须有（type=“submit”） 这个表单才可以提交&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;input标签的用法&#34;&gt;input标签的用法&lt;/h2&gt;

&lt;p&gt;input标签的作用：让用户输入内容&lt;/p&gt;

&lt;p&gt;属性：类型type：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;name        重点使用，给文本框的属性加一个名字，方便分类文本框&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;text        文本&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;color       颜色&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;password    不展示具体内容，例如输入密码让字符隐藏起来********&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;radio       单选框:o男 o女  加入相同的name才能单选&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;button      定义一个按钮，里面可以加各种文字，照片，链接&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;checkbox    多选框，用同一个name表示一个组的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;file        上传文件   input type=&amp;ldquo;file&amp;rdquo; multiple可以上传多个文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;submit      提交，刷新（按钮）必须有的属性&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;hidden      上传看不见的内容，可以让js自动填充一个字符串，id之类的&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;number      可以在文本框里自己选择填写的数据&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;search      可以直接在文本框删除内容&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tel         电话&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;email       邮件&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其它输入标签&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;select+option   选择标签， 例如:选择星期几&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;select 是真正的值  用户看见的值&lt;/p&gt;

&lt;p&gt;option value =&amp;ldquo;&amp;rdquo;&amp;gt;&amp;ndash;请选择&amp;ndash;option&lt;/p&gt;

&lt;p&gt;option value =&amp;ldquo;1&amp;rdquo;&amp;gt;星期一option&lt;/p&gt;

&lt;p&gt;option value =&amp;ldquo;2&amp;rdquo;&amp;gt;星期二option&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;select&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;textarea    输入多行内容，文本框可以拖动大小
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;textarea style = &amp;ldquo;resize : nome; width = 50%; height = 200px; &amp;ldquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;textarea                    固定宽高，不能拖动文本框，改变大小
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;事件&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;onchange      输入改变时触发&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;onfocus       把鼠标放在上面时触发&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;onblur        鼠标从里面移出来时触发&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;重点：input和button的区别&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;input type =&amp;ldquo;submit&amp;rdquo; value =&amp;ldquo;搞起&amp;rdquo;&lt;/p&gt;

&lt;p&gt;input里面不能有其它内容&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;button type =&amp;ldquo;submit&amp;rdquo;&amp;gt;搞起&amp;lt;/button&lt;/p&gt;

&lt;p&gt;button里可以添加任意内容，图片之类的&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML,新增了验证器功能&lt;/p&gt;

&lt;p&gt;学习体会&lt;/p&gt;

&lt;p&gt;HTML标签数量很多，但经过分类学习，自己在vscode上进行了操作演练，对这些标签的属性和用法有了大概的了解，只是使用上有点不熟悉，已经做好学习笔记，会经常拿出笔记进行背诵。&lt;/p&gt;

&lt;p&gt;期待下节课学习制作简单点的网页，把学到的知识使用起来。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>HTML入门笔记</title>
      <link>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 16 Aug 2019 15:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/html%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      
        <description>

&lt;h1 id=&#34;html入门笔记1&#34;&gt;HTML入门笔记1&lt;/h1&gt;

&lt;h2 id=&#34;今天是19年8月16号-这周学习了html入门&#34;&gt;今天是19年8月16号,这周学习了HTML入门&lt;/h2&gt;

&lt;h3 id=&#34;写博客记录下来&#34;&gt;写博客记录下来&lt;/h3&gt;

&lt;p&gt;HTML是Tim Berners-Lee发明的&lt;/p&gt;

&lt;p&gt;HTML起手先输入 ！&lt;/p&gt;

&lt;p&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;html lang=&#34;en&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;head&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta charset=&#34;UTF-8&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, 
initial-scale=1.0&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;meta http-equiv=&#34;X-UA-Compatible&#34; content=&#34;ie=edge&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/head&gt;&lt;/p&gt;

&lt;p&gt;&lt;body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/body&gt;&lt;/p&gt;

&lt;p&gt;&lt;/html&gt;&lt;/p&gt;

&lt;p&gt;HTML常用的章节标签有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;标题  h1-h6&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;章节  section&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;文章  article&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;段落  p&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;头部  header&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;脚部  footer&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主要内容 main&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;旁支内容 aside&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;划分  div&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML全局属性有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;class 用来给你的标签加样式&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;contenteditable 可以使任意元素被编辑&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;hidden 让一个东西看不见&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;id 赋予一个元素值（认为id具有唯一性，html不报错id，css里可以直接调用id，不到万不得已不使用）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;style 每一个元素可以写style属性&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;tabindex 用tab切换元素的顺序，0最后访问，-1别访问，123按顺序访问&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;title    鼠标放上去显示完整内容&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML常用的内容标签有&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;ol+li 有顺序的列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;ul+li 无顺序的列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;dl+dt+dd 描述列表&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;pre HTML格式默认只保留一个空格，回车，如果需要保留多个空格，用pre包起来&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;code code让里面的内容等宽，为了方便填写代码&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;hr 分格线&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;br 中断现在这行，进行换行&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a  a标签，超链接一个链接，可以直接访问&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;em 强调 强调语气&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;strong 重要，本身就重要&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;quote 引用&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;blockquote 换行引用，结果进行换行&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
      
    </item>
    
    <item>
      <title>如何创建博客</title>
      <link>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Thu, 15 Aug 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      
        <description>

&lt;h1 id=&#34;今天学习了创建博客&#34;&gt;今天学习了创建博客&lt;/h1&gt;

&lt;p&gt;使用Hugo，go语言实现的一个博客生成器&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在vscode上，使用 Hugo官网代码，按步骤创建博客框架&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建 .gitignore 文件，输入 /public/&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;打开 cd public&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git init  创建.git仓库&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git add .  关联这些文件&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git commit -v 保存并提交注释&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在github上创建仓库，复制仓库地址代码，在vscode上运行&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在github上打开settings，打开github pages，查询网址&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git push&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;每次写完新的博客：1，git add .  2,gc  3,hugo  4,cd public/&lt;br /&gt;
5,git add .  6,gc   7,git push&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
      
    </item>
    
    <item>
      <title>开博大吉</title>
      <link>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</link>
      <pubDate>Wed, 14 Aug 2019 10:51:31 +0800</pubDate>
      
      <guid>http://localhost:1313/post/%E5%BC%80%E5%8D%9A%E5%A4%A7%E5%90%89/</guid>
      
        <description>

&lt;h1 id=&#34;大家好&#34;&gt;大家好&lt;/h1&gt;

&lt;p&gt;我的Github博客开通了，用来记录我的学习过程，记笔记，希望把前端学好学会&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
